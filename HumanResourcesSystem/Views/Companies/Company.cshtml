@model HumanResourcesSystem.Models.CompanyPageModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container mt-4">
    <div class="card text-dark bg-white border shadow-sm">
        <div class="card-body">
            <form method="post" id="companyForm">
                @Html.AntiForgeryToken()

                <input type="hidden" asp-for="Id" />

                <div class="mb-3">
                    <p class="form-control-plaintext">ID: @Model.Id</p>
                </div>

                <div class="mb-3">
                    <label for="Name" class="form-label">Şirket İsmi:</label>
                    <input type="text" asp-for="Name" class="form-control" />
                </div>

                <div class="mb-3">
                    <label for="Description" class="form-label">Şirket Açıklaması:</label>
                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                </div>

                <div class="mb-3">
                    <label for="Industry" class="form-label">Şirket Endüstrisi:</label>
                    <input type="text" asp-for="Industry" class="form-control" />
                </div>

                <div class="mb-4 p-3 rounded bg-light">
                    <label class="form-label">Departmanlar:</label>
                    <ul class="list-group mb-3" id="departmentList">
                        @foreach (var item in Model.Departments)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center" id="department-@item.Id">
                                <span class="department-name">@item.Name</span>
                                <div class="button-group">
                                    <button type="button" class="btn btn-sm btn-success" data-id="@item.Id" onclick="editDepartment(this)">Düzenle</button>
                                    <button type="button" class="btn btn-sm btn-danger" data-id="@item.Id" onclick="deleteDepartment(this)">Sil</button>
                                </div>
                            </li>
                        }
                    </ul>

                    <div class="input-group">
                        <input type="text" asp-for="NewDepartment" class="form-control" placeholder="Yeni departman adı..." />
                        <button asp-action="AddNewDepartment" asp-controller="Companies" type="submit" class="btn btn-success">
                            Ekle
                        </button>
                    </div>
                </div>

                <div class="d-flex gap-2">
                    <button asp-area="" asp-controller="Companies" asp-action="Change" type="submit" class="btn btn-success">
                        Değiştir
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function editDepartment(button) {
        var departmentId = button.getAttribute('data-id');

        var listItem = document.getElementById('department-' + departmentId);
        var nameSpan = listItem.querySelector('.department-name');
        var buttonGroup = listItem.querySelector('.button-group');

        var currentName = nameSpan.innerText;

        nameSpan.innerHTML = `<input type="text" class="form-control form-control-sm" id="edit-input-${departmentId}" value="${currentName}" />`;

        buttonGroup.innerHTML = `
            <button type="button" class="btn btn-sm btn-success" onclick="confirmEdit(this)" data-id="${departmentId}">&#10003;</button>
            <button type="button" class="btn btn-sm btn-danger" onclick="cancelEdit(this)" data-id="${departmentId}">&#10005;</button>
        `;
    }

    function cancelEdit(button) {
        var departmentId = button.getAttribute('data-id');

        var listItem = document.getElementById('department-' + departmentId);
        var nameSpan = listItem.querySelector('.department-name');
        var buttonGroup = listItem.querySelector('.button-group');

        var originalName = document.getElementById('edit-input-' + departmentId).defaultValue;

        nameSpan.innerText = originalName;

        buttonGroup.innerHTML = `
            <button type="button" class="btn btn-sm btn-success" data-id="${departmentId}" onclick="editDepartment(this)">Düzenle</button>
            <button type="button" class="btn btn-sm btn-danger" data-id="${departmentId}" onclick="deleteDepartment(this)">Sil</button>
        `;
    }

    function confirmEdit(button) {
        var departmentId = button.getAttribute('data-id');
        var newName = document.getElementById('edit-input-' + departmentId).value;
        var token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch('/Companies/EditDepartmentName', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({
                id: departmentId,
                newName: newName
            })
        })
            .then(response => {
                if (response.ok) {
                    var listItem = document.getElementById('department-' + departmentId);
                    var nameSpan = listItem.querySelector('.department-name');
                    var buttonGroup = listItem.querySelector('.button-group');

                    nameSpan.innerText = newName;

                    buttonGroup.innerHTML = `
                    <button type="button" class="btn btn-sm btn-success" data-id="${departmentId}" onclick="editDepartment(this)">Düzenle</button>
                    <button type="button" class="btn btn-sm btn-danger" data-id="${departmentId}" onclick="deleteDepartment(this)">Sil</button>
                `;
                } else {
                    alert('Güncelleme başarısız.');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
            });
    }


    function deleteDepartment(button) {
        if (!confirm('Bu departmanı silmek istediğinize emin misiniz?')) return;

        var departmentId = button.getAttribute('data-id');
        console.log('departmentId:', departmentId);
        if (!departmentId) {
            console.error('departmentId is null or undefined');
            return; 
        }

        var token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch('/Companies/DeleteDepartment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({ id: departmentId })
        })
            .then(response => {
                if (response.ok) {
                    document.getElementById('department-' + departmentId).remove();
                } else {
                    alert('Silme başarısız.');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
            });
    }


    
</script>